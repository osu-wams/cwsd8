#!/usr/bin/env bash
set -e;
drupal_settings() {
  if [ -z "${DRUPAL_DBHOST}" ]; then
      DRUPAL_DBHOST="localhost"
  fi
  if [ -z "${DRUPAL_DBPORT}" ]; then
      DRUPAL_DBPORT="3306"
  fi
  DRUPAL_HASH_SALT=$(openssl rand -base64 16)
  touch /var/www/html/docroot/sites/default/settings.local.php
  cat<<EOT > /var/www/html/docroot/sites/default/settings.local.php
<?php
\$settings['trusted_host_patterns'] = [
    '^localhost\$',
    '^.+\.localhost$',
    '^osuwams.ews.oregonstate.edu$',
    '^localhost.oregonstate.edu\$',
];
\$settings['hash_salt'] = '${DRUPAL_HASH_SALT}';
\$databases['default']['default'] = [
    'database' => '${DRUPAL_DBNAME}',
    'username' => '${DRUPAL_DBUSER}',
    'password' => '${DRUPAL_DBPASS}',
    'host' => '${DRUPAL_DBHOST}',
    'port' => '${DRUPAL_DBPORT}',
    'driver' => 'mysql',
    'prefix' => '',
    'collation' => 'utf8mb4_general_ci',
];
\$settings['file_temp_path'] = '/tmp';
\$settings['config_sync_directory'] =  \$app_root . '/../config/' . basename(\$site_path);
\$settings['config_vcs_directory'] =  \$app_root . '/../config/' . basename(\$site_path);
\$config['cas.settings']['forced_login']['enabled']=FALSE;
\$config['cas.settings']['user_accounts']['prevent_normal_login']=FALSE;
\$config['seckit.settings']['seckit_xss']['csp']['upgrade-req']=FALSE;
\$config['dx_messages.settings']['dx_api_key'] = getenv('DATA_DX_KEY');
\$memcache_exists = class_exists('Memcache', FALSE);
\$memcached_exists = class_exists('Memcached', FALSE);
\$memcache_services_yml = DRUPAL_ROOT . '/modules/contrib/memcache/memcache.services.yml';
\$memcache_module_is_present = file_exists(\$memcache_services_yml);
\$memcache_is_active = getenv('DRUPAL_MEMCACHE') ?: FALSE;
if (\$memcache_is_active && \$memcache_module_is_present && (\$memcache_exists || \$memcached_exists)) {
  \$memcache_host = getenv('DRUPAL_MEMCACHEHOST') ?: '127.0.0.1';
  \$settings['memcache']['servers'] = [
    "\$memcache_host:11211" => 'default',
  ];
  // Use Memcached extension if available.
  if (\$memcached_exists) {
    \$settings['memcache']['extension'] = 'Memcached';
  }
  \$class_loader->addPsr4('Drupal\\\\memcache\\\\', \$app_root . '/modules/contrib/memcache/src');
  \$settings['container_yamls'][] = \$memcache_services_yml;
   \$settings['memcache']['options'] = [
    Memcached::OPT_COMPRESSION => TRUE,
    Memcached::OPT_TCP_NODELAY => TRUE,
    Memcached::OPT_DISTRIBUTION => Memcached::DISTRIBUTION_CONSISTENT,
  ];
  \$settings['memcache']['key_prefix'] = '';
  // Define custom bootstrap container definition to use Memcache for cache.container.
  \$settings['bootstrap_container_definition'] = [
    'parameters' => [],
    'services' => [
      'database' => [
        'class' => 'Drupal\Core\Database\Connection',
        'factory' => 'Drupal\Core\Database\Database::getConnection',
        'arguments' => ['default'],
      ],
      'settings' => [
        'class' => 'Drupal\Core\Site\Settings',
        'factory' => 'Drupal\Core\Site\Settings::getInstance',
      ],
      'memcache.settings' => [
        'class' => 'Drupal\memcache\MemcacheSettings',
        'arguments' => ['@settings'],
      ],
      'memcache.factory' => [
        'class' => 'Drupal\memcache\Driver\MemcacheDriverFactory',
        'arguments' => ['@memcache.settings'],
      ],
      'memcache.timestamp.invalidator.bin' => [
        'class' => 'Drupal\memcache\Invalidator\MemcacheTimestampInvalidator',
        # Adjust tolerance factor as appropriate when not running memcache on localhost.
        'arguments' => ['@memcache.factory', 'memcache_bin_timestamps', 0.001],
      ],
      'memcache.backend.cache.container' => [
        'class' => 'Drupal\memcache\DrupalMemcacheInterface',
        'factory' => ['@memcache.factory', 'get'],
        'arguments' => ['container'],
      ],
      'cache_tags_provider.container' => [
        'class' => 'Drupal\Core\Cache\DatabaseCacheTagsChecksum',
        'arguments' => ['@database'],
      ],
      'cache.container' => [
        'class' => 'Drupal\memcache\MemcacheBackend',
        'arguments' => ['container', '@memcache.backend.cache.container', '@cache_tags_provider.container', '@memcache.timestamp.invalidator.bin'],
      ],
    ],
  ];
  \$settings['cache']['default'] = 'cache.backend.memcache';
}
EOT
echo "Finished setting up Drupal settings!"
}
if [ -z "${DRUPAL_DBUSER}" ] || [ -z "${DRUPAL_DBPASS}" ] || [ -z "${DRUPAL_DBNAME}" ]; then
    echo "No Database provided, you will have to follow setup process."
else
    drupal_settings
fi
if [ -z "${DRUPAL_THEME_DEVEL}" ]; then
  echo "Running in Production Mode";
else
  cp /var/www/html/docroot/sites/default/default.services.yml /var/www/html/docroot/sites/default/services.yml;
  sed -i 's/debug\:\ false/debug\:\ true/' /var/www/html/docroot/sites/default/services.yml;
  sed -i 's/auto_reload\:\ null/auto_reload\:\ true/' /var/www/html/docroot/sites/default/services.yml;
  sed -i 's/cache\:\ true/cache\:\ false/' /var/www/html/docroot/sites/default/services.yml;
  echo "Finished setting up Theme Development Settings.";
fi
exec "$@"
